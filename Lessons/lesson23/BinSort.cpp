#include <iostream>
using namespace std;
#include <stdlib.h>
#include <time.h>
#define MAXVALUE 1000
#define MAXSIZE 20000000

void swap(int x, int y );
void randomArray(int numElements, int seed);
void printArray(int numElements);
int countingSort (int numElements, int maxValue);

int data[MAXSIZE];  //global variable

int main (int argc, char *argv[]){

	int numElements=atoi(argv[1]);
  //int numElements=10;
	int seed=137;
	time_t timerStart;
	time_t timerStop;
	float elapsedTime;

	randomArray(numElements, seed);
	printArray(numElements);

	cout << "Count sorting " << numElements << " elements:" << endl;
	timerStart=clock();  //Start keeping track of time*/
	countingSort(numElements, MAXVALUE);
	timerStop=clock();   //Stop keeping track of time.

	elapsedTime=((float)timerStop-(float)timerStart)/CLOCKS_PER_SEC;
	cout << "Elapsed Time=" << elapsedTime << " seconds"<< endl<< endl;

	printArray(numElements);
	return 0;
}

int countingSort (int numElements, int maxValue){
	int * countingArray=(int *)malloc(maxValue*sizeof(int)); 
  for(int i =0; i<maxValue; i++){
    countingArray[i] = 0;
  }

	// now you can use countingArray[49] = 291; type access
  for(int i=0; i<numElements; i++){
    int tmp = data[i];
    countingArray[tmp]++;
  }


  int count=0;

  for(int i=0; i<maxValue; i++){
    for(int j=0; j<countingArray[i]; j++){
      data[count] = i;
      count++;
    }
  }


	//store the sorted numbers back into original data ...


	//de-allocate memory
	free(countingArray);
}



//Prints the contents of an array, separated by spaces
void printArray(int numElements){
	for (int i=0; i<numElements; i++){
		cout << data[i] << " ";
	}
	cout << endl;
}

//Fills array data with numElements of random numbers, using seed
void randomArray(int numElements, int seed){
	//fill array with random numbers
	srand(seed);
	for (int i=0; i<numElements; i++ ) {
		data[i]= rand()%MAXVALUE;
	}
}


// Swaps the elements in data[x] and data[y]
void swap(int x, int y ) {
	int tmp = data[x];
	data[x] = data[y];
	data[y] = tmp;
}



/*OUTPUT
*SIZE 10
4c-32-75-9c-9c-29:lesson23 dylan$ ./a.out 10
559 467 360 32 826 501 646 115 280 317
Count sorting 10 elements:
Elapsed Time=2.5e-05 seconds

32 115 280 317 360 467 501 559 646 826

*SIZE 100
4c-32-75-9c-9c-29:lesson23 dylan$ ./a.out 100
559 467 360 32 826 501 646 115 280 317 636 668 293 166 690 327 922 226 436 21
632 335 373 340 315 237 799 503 560 783 61 874 499 697 270 253 481 772 978 127
128 366 788 391 862 242 594 180 639 736 202 906 292 389 813 896 286 918 382 535
333 599 923 467 392 512 557 132 773 351 830 753 56 906 921 757 815 550 937 718
644 879 879 819 483 73 685 295 795 539 699 324 129 544 264 137 860 764 714 496
Count sorting 100 elements:
Elapsed Time=4.8e-05 seconds

21 32 56 61 73 115 127 128 129 132 137 166 180 202 226 237 242 253 264 270 280
286 292 293 295 315 317 324 327 333 335 340 351 360 366 373 382 389 391 392 436
467 467 481 483 496 499 501 503 512 535 539 544 550 557 559 560 594 599 632 636
639 644 646 668 685 690 697 699 714 718 736 753 757 764 772 773 783 788 795 799
813 815 819 826 830 860 862 874 879 879 896 906 906 918 921 922 923 937 978

*SIZE 1000
4c-32-75-9c-9c-29:lesson23 dylan$ ./a.out 1000
559 467 360 32 826 501 646 115 280 317 636 668 293 166 690 327 922 226 436 21
632 335 373 340 315 237 799 503 560 783 61 874 499 697 270 253 481 772 978 127
128 366 788 391 862 242 594 180 639 736 202 906 292 389 813 896 286 918 382 535
333 599 923 467 392 512 557 132 773 351 830 753 56 906 921 757 815 550 937 718
644 879 879 819 483 73 685 295 795 539 699 324 129 544 264 137 860 764 714 496
406 481 94 908 182 580 726 801 47 852 323 653 540 41 0 421 867 900 857 445 856
370 378 864 174 857 665 906 294 973 767 422 294 553 435 186 219 604 167 32 70
737 934 869 694 998 387 204 897 120 403 669 16 234 377 909 594 537 990 92 500
267 90 21 665 297 614 335 679 926 963 691 967 872 805 480 352 137 122 625 336
262 94 674 256 982 781 17 353 841 320 973 641 891 984 397 644 865 203 360 610
303 721 142 752 422 536 231 595 157 648 299 205 717 701 501 173 537 910 331 608
979 554 136 320 441 861 176 703 362 118 433 0 515 968 748 996 588 620 63 520 515
727 152 581 658 620 209 471 999 628 406 761 536 366 434 640 976 631 160 644 64
469 543 985 909 635 857 852 374 319 462 109 780 450 203 194 219 471 964 890 797
76 491 697 733 830 967 732 235 522 86 416 526 535 748 491 472 320 236 796 47 433
500 271 421 633 224 727 674 947 637 784 152 271 330 616 173 584 419 386 797 874
146 994 810 547 229 957 383 48 251 858 181 991 109 212 50 5 741 236 486 545 749
253 143 239 46 327 648 191 388 656 266 153 326 32 736 995 118 20 680 690 155 525
604 47 449 764 106 336 997 659 804 912 771 510 237 775 90 956 146 303 399 269
647 411 341 66 659 792 352 238 612 390 21 37 545 693 875 569 259 883 868 239 837
854 540 309 877 403 969 436 984 792 434 687 490 259 108 546 191 238 690 301 780
693 129 315 798 316 622 556 615 388 538 214 993 843 76 178 924 785 798 508 998
337 540 153 659 829 243 645 131 705 647 469 9 213 698 242 736 319 112 998 932
135 942 13 509 112 951 676 826 101 265 848 283 143 49 391 347 197 156 312 958
573 774 945 885 30 110 116 721 819 191 167 233 807 854 759 42 657 223 153 693
210 578 558 650 647 951 197 955 532 837 971 615 603 770 95 810 619 516 2 504
180 222 822 210 995 507 799 416 93 57 447 240 401 714 707 582 962 803 979 831
673 623 132 967 121 548 921 486 858 539 748 126 23 63 653 467 499 695 908 603
435 441 202 47 715 159 733 122 719 859 601 723 531 298 688 375 569 196 819 859
984 61 887 311 293 66 685 627 744 546 217 224 546 321 357 720 354 388 497 531
954 227 809 829 781 409 251 548 31 732 433 149 218 898 533 926 683 364 902 368
542 812 331 80 887 477 967 823 213 975 51 909 991 772 565 736 795 278 893 809
448 77 961 448 559 218 332 250 883 594 640 257 350 951 21 460 684 852 657 27
852 891 770 412 817 804 779 669 458 635 576 685 584 526 951 487 88 498 199 966
434 398 782 473 329 801 226 278 202 915 319 951 956 601 123 395 741 45 383 398
523 946 695 589 362 87 961 915 199 112 707 128 478 490 791 112 614 90 180 562
958 988 477 308 178 182 882 663 58 987 296 289 235 51 178 326 391 603 646 457
575 349 110 798 417 583 584 709 983 80 214 245 726 762 111 426 710 572 219 240
414 729 441 435 120 451 830 171 258 293 637 623 80 654 342 331 499 826 142 193
128 951 915 54 391 481 992 936 261 704 766 888 187 564 741 740 129 27 107 233
603 581 447 275 914 137 701 215 106 503 584 440 684 781 533 178 837 456 416 537
106 515 33 2 997 123 247 293 736 173 956 330 429 323 151 57 47 613 64 606 879 909
839 683 678 631 329 560 315 305 264 298 185 743 343 750 864 481 19 640 837 215
356 829 651 482 227 96 3 228 913 810 140 516 86 481 265 95 868 166 210 392 635
498 511 886 624 763 580 487 690 177 772 342 995 793 389 62 287 302 481 38 249
682 994 209 109 640 942 794 648 499 371 438 104 886 981 872 231 610 35 171 356
10 80 187 234 390 13 141 842 839 45 220 362 920 177 512 593 216 869 568 287 571
833 842 281 309 572 837 541 756 962 82 561 784 894 780 219 303 981 964 121 886
783 276 856 573 310 935 41 671 897 479 823 507 365 179 171 16 451 651 309 337
961 744 573 92 260 200 880 828 57 159
Count sorting 1000 elements:
Elapsed Time=5.4e-05 seconds

0 0 2 2 3 5 9 10 13 13 16 16 17 19 20 21 21 21 21 23 27 27 30 31 32 32 32 33 35
 37 38 41 41 42 45 45 46 47 47 47 47 47 48 49 50 51 51 54 56 57 57 57 58 61 61
 62 63 63 64 64 66 66 70 73 76 76 77 80 80 80 80 82 86 86 87 88 90 90 90 92 92
 93 94 94 95 95 96 101 104 106 106 106 107 108 109 109 109 110 110 111 112 112
 112 112 115 116 118 118 120 120 121 121 122 122 123 123 126 127 128 128 128 129
 129 129 131 132 132 135 136 137 137 137 140 141 142 142 143 143 146 146 149 151
 152 152 153 153 153 155 156 157 159 159 160 166 166 167 167 171 171 171 173 173
  173 174 176 177 177 178 178 178 178 179 180 180 180 181 182 182 185 186 187
  187 191 191 191 193 194 196 197 197 199 199 200 202 202 202 203 203 204 205
  209 209 210 210 210 212 213 213 214 214 215 215 216 217 218 218 219 219 219
  219 220 222 223 224 224 226 226 227 227 228 229 231 231 233 233 234 234 235
  235 236 236 237 237 238 238 239 239 240 240 242 242 243 245 247 249 250 251
  251 253 253 256 257 258 259 259 260 261 262 264 264 265 265 266 267 269 270
  271 271 275 276 278 278 280 281 283 286 287 287 289 292 293 293 293 293 294
  294 295 296 297 298 298 299 301 302 303 303 303 305 308 309 309 309 310 311
  312 315 315 315 316 317 319 319 319 320 320 320 321 323 323 324 326 326 327
  327 329 329 330 330 331 331 331 332 333 335 335 336 336 337 337 340 341 342
  342 343 347 349 350 351 352 352 353 354 356 356 357 360 360 362 362 362 364
  365 366 366 368 370 371 373 374 375 377 378 382 383 383 386 387 388 388 388
  389 389 390 390 391 391 391 391 392 392 395 397 398 398 399 401 403 403 406
  406 409 411 412 414 416 416 416 417 419 421 421 422 422 426 429 433 433 433
  434 434 434 435 435 435 436 436 438 440 441 441 441 445 447 447 448 448 449
  450 451 451 456 457 458 460 462 467 467 467 469 469 471 471 472 473 477 477
  478 479 480 481 481 481 481 481 481 482 483 486 486 487 487 490 490 491 491
  496 497 498 498 499 499 499 499 500 500 501 501 503 503 504 507 507 508 509
  510 511 512 512 515 515 515 516 516 520 522 523 525 526 526 531 531 532 533
  533 535 535 536 536 537 537 537 538 539 539 540 540 540 541 542 543 544 545
  545 546 546 546 547 548 548 550 553 554 556 557 558 559 559 560 560 561 562
  564 565 568 569 569 571 572 572 573 573 573 575 576 578 580 580 581 581 582
  583 584 584 584 584 588 589 593 594 594 594 595 599 601 601 603 603 603 603
  604 604 606 608 610 610 612 613 614 614 615 615 616 619 620 620 622 623 623
  624 625 627 628 631 631 632 633 635 635 635 636 637 637 639 640 640 640 640
  641 644 644 644 645 646 646 647 647 647 648 648 648 650 651 651 653 653 654
  656 657 657 658 659 659 659 663 665 665 668 669 669 671 673 674 674 676 678
  679 680 682 683 683 684 684 685 685 685 687 688 690 690 690 690 691 693 693
  693 694 695 695 697 697 698 699 701 701 703 704 705 707 707 709 710 714 714
  715 717 718 719 720 721 721 723 726 726 727 727 729 732 732 733 733 736 736
  736 736 736 737 740 741 741 741 743 744 744 748 748 748 749 750 752 753 756
  757 759 761 762 763 764 764 766 767 770 770 771 772 772 772 773 774 775 779
  780 780 780 781 781 781 782 783 783 784 784 785 788 791 792 792 793 794 795
  795 796 797 797 798 798 798 799 799 801 801 803 804 804 805 807 809 809 810
  810 810 812 813 815 817 819 819 819 822 823 823 826 826 826 828 829 829 829
  830 830 830 831 833 837 837 837 837 837 839 839 841 842 842 843 848 852 852
  852 852 854 854 856 856 857 857 857 858 858 859 859 860 861 862 864 864 865
  867 868 868 869 869 872 872 874 874 875 877 879 879 879 880 882 883 883 885
  886 886 886 887 887 888 890 891 891 893 894 896 897 897 898 900 902 906 906
  906 908 908 909 909 909 909 910 912 913 914 915 915 915 918 920 921 921 922
  923 924 926 926 932 934 935 936 937 942 942 945 946 947 951 951 951 951 951
  951 954 955 956 956 956 957 958 958 961 961 961 962 962 963 964 964 966 967
  967 967 967 968 969 971 973 973 975 976 978 979 979 981 981 982 983 984 984
  984 985 987 988 990 991 991 992 993 994 994 995 995 995 996 997 997 998 998
  998 999


*/
